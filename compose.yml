services:
  dinghy_layer:
    build:
      context: .
      dockerfile: build/Dockerfile
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik_dynamic:/traefik/dynamic
    command: ["sh", "-c", "/usr/local/bin/dinghy-layer"]
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
    labels:
      - "traefik.enable=false"
    restart: always

  join_networks:
    build:
      context: .
      dockerfile: build/Dockerfile
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command:
      ["sh", "-c", "/usr/local/bin/join-networks -container-name http-proxy"]
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
    labels:
      - "traefik.enable=false"
    restart: always

  dns:
    build:
      context: .
      dockerfile: build/Dockerfile
    ports:
      - "19322:19322/udp"
    command: ["sh", "-c", "/usr/local/bin/dns-server"]
    environment:
      - HTTP_PROXY_DNS_TLDS=${HTTP_PROXY_DNS_TLDS:-loc}
      - HTTP_PROXY_DNS_TARGET_IP=${HTTP_PROXY_DNS_TARGET_IP:-127.0.0.1}
      - HTTP_PROXY_DNS_PORT=${HTTP_PROXY_DNS_PORT:-19322}
      - HTTP_PROXY_DNS_FORWARD_ENABLED=${HTTP_PROXY_DNS_FORWARD_ENABLED:-false}
      - HTTP_PROXY_DNS_UPSTREAM_SERVERS=${HTTP_PROXY_DNS_UPSTREAM_SERVERS:-8.8.8.8:53,1.1.1.1:53}
      - LOG_LEVEL=${LOG_LEVEL:-info}
    labels:
      - "traefik.enable=false"
    restart: always

  traefik:
    build:
      context: ./build/traefik
      dockerfile: Dockerfile
    container_name: http-proxy
    ports:
      - "80:80"
      - "443:443"
      - "30000:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - traefik_dynamic:/traefik/dynamic
      - "${LOCAL_HOME:-$HOME}/.local/spark/http-proxy/certs:/traefik/certs:ro"
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
    labels:
      - "traefik.enable=false"
    restart: always

  # Optional Prometheus service (enabled with --profile metrics)
  prometheus:
    build:
      context: ./build/prometheus
      dockerfile: Dockerfile
    container_name: http-proxy-prometheus
    ports:
      - "9090"
    volumes:
      - prometheus_data:/prometheus
    labels:
      - "traefik.enable=false"
    restart: always
    profiles:
      - metrics

  # Optional Grafana service (enabled with --profile metrics)
  grafana:
    build:
      context: ./build/grafana
      dockerfile: Dockerfile
    container_name: http-proxy-grafana
    ports:
      - "30001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH=/var/lib/grafana/dashboards/traefik-official.json
    volumes:
      - grafana_data:/var/lib/grafana
    labels:
      - "traefik.enable=false"
    depends_on:
      - prometheus
    restart: always
    profiles:
      - metrics

volumes:
  traefik_dynamic:
  prometheus_data:
  grafana_data:

networks:
  default:
    name: http-proxy_default
